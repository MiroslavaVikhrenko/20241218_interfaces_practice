using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _20241219_task4
{
    /*
         Напишите программу, содержащую абстрактный класс с двумя защищенными целочисленными полями и конструктор 
        с двумя целочисленными аргументами. В классе должен быть объявлен абстрактный индексатор с целочисленным индексом. 
        Опишите интерфейс, в котором есть метод с целочисленным аргументом и целочисленным результатом. Опишите класс, который 
        наследует абстрактный базовый класс и реализует интерфейс. В этом классе опишите индексатор так, чтобы при четном индексе 
        выполнялось обращение к первому полю, а при нечетном индексе обращение выполнялось ко второму полю. Метод следует описать 
        таким образом, чтобы он результатом возвращал сумму значений полей, умноженную на аргумент метода.
    */
    internal class ClassB : ClassA, ICalculate
    {
        public ClassB(int n1, int n2) : base(n1, n2) { }

        public override int this[int i]
        {
            get
            {
                if (i % 2 == 0)
                {
                    return n1;
                }
                else
                {
                    return n2;
                }
            }
            set
            {
                if (i % 2 == 0)
                {
                    n1 = value;
                }
                else
                {
                    n2 = value;
                }
            }
        }

        public int Calculate(int n)
        {
            return (n1 + n2) * n;
        }
    }
}
